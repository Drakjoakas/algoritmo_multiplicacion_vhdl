library ieee;
use ieee.std_logic_1164.all;

entity UPA_out_A is
port(
	clk:   in  std_logic;
	Cin:   in  std_logic;
	Log:   in  std_logic;
	Rot:   in  std_logic;
	UPA:   in  std_logic_vector(9 downto 7);
	Hab:   in  std_logic;
	A:     in  std_logic_vector(7 downto 0);
	B:     in  std_logic_vector(7 downto 0);
	F:     in  std_logic_vector(7 downto 0);
	Qi:    out std_logic_vector(7 downto 0);
	Yi:    out std_logic_vector(7 downto 0)
);
end entity;

architecture Behavioral of UPA_out_A is
	signal Ct, Cm, Qm, Mul: std_logic;
	signal Qi, Yi: std_logic_vector(7 downto 0);
begin
	process(clk)
	begin
		if rising_edge(clK) then
			Ct <= Yi(0);
			Cm <= Yi(7);
			Qm <= Qi(7);
			Mul<= Yi(0);
			
			if Hab='1' then
				case UPA is
					when "000" => --Carga F en Yi y en Qi
						Ct <= '0';
						Yi <= F;
						Qi <= F;
					when "001" => --Carga F en Yi, Qi no se modifica
						Ct <= '0';
						Yi <= F;
					when "010" => --Carga A en Yi, Qi no se modifica
						Ct <= '0';
						Yi <= A;
					when "011" => --Carga B en Yi, Qi no se modifica
						Ct <= '0';
						Yi <= B;
					when "100" => --Calcula F/2 y lo guarda en Yi, Qi no se modifica
						
						if Log and not Rot then
							Yi <= (F >> 1);
						elsif not Log and not Rot then
							Yi <= (F >> 1);
							Yi(7) <= Cm;
						elsif not Log and Rot then
							Yi <= (F >> 1);
							Yi(7) <= Cin;
						end if;
					when "101" => --Calcula Qi/2 y lo guarda en Qi, Yi no se modifica
						
						if Log and not Rot then
							Qi <= (Qi >> 1);
						elsif not Log and not Rot then
							Qi <= (Qi >> 1);
							Qi(7) <= Qm;
						elsif not Log and Rot then
							Qi <= (Qi >> 1);
							Qi(7) <= Cin;
						elsif Log and Rot then
							Qi <= (Qi >> 1);
							Qi(7) <= Mul;
							Yi <= (Yi >> 1);
							Yi(7) <= Cin;
						end if;
					when "110" => --Calcula 2F y lo guarda en Yi, Qi no se modifica
						if not Rot then
							Yi <= (F << 1);
						else
							Yi <= (F << 1);
							Yi(0) <= Cin;
						end if;
					when "111" => --Calcula "Qi y lo guarda en Qi, Yi no se modifica
						if not Rot then
							Qi <= (Qi << 1);
						else
							Qi <= (Qi << 1);
							Qi(0) <= Cin;
						end if;
				end case;
			end if;
		end if;
	end process;
end architecture;